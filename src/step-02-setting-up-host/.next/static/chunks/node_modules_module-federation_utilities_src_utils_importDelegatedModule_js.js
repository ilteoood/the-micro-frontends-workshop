"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhost"] = self["webpackChunkhost"] || []).push([["node_modules_module-federation_utilities_src_utils_importDelegatedModule_js"],{

/***/ "../../node_modules/tslib/tslib.es6.js":
/*!*********************************************!*\
  !*** ../../node_modules/tslib/tslib.es6.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: function() { return /* binding */ __assign; },\n/* harmony export */   __asyncDelegator: function() { return /* binding */ __asyncDelegator; },\n/* harmony export */   __asyncGenerator: function() { return /* binding */ __asyncGenerator; },\n/* harmony export */   __asyncValues: function() { return /* binding */ __asyncValues; },\n/* harmony export */   __await: function() { return /* binding */ __await; },\n/* harmony export */   __awaiter: function() { return /* binding */ __awaiter; },\n/* harmony export */   __classPrivateFieldGet: function() { return /* binding */ __classPrivateFieldGet; },\n/* harmony export */   __classPrivateFieldIn: function() { return /* binding */ __classPrivateFieldIn; },\n/* harmony export */   __classPrivateFieldSet: function() { return /* binding */ __classPrivateFieldSet; },\n/* harmony export */   __createBinding: function() { return /* binding */ __createBinding; },\n/* harmony export */   __decorate: function() { return /* binding */ __decorate; },\n/* harmony export */   __exportStar: function() { return /* binding */ __exportStar; },\n/* harmony export */   __extends: function() { return /* binding */ __extends; },\n/* harmony export */   __generator: function() { return /* binding */ __generator; },\n/* harmony export */   __importDefault: function() { return /* binding */ __importDefault; },\n/* harmony export */   __importStar: function() { return /* binding */ __importStar; },\n/* harmony export */   __makeTemplateObject: function() { return /* binding */ __makeTemplateObject; },\n/* harmony export */   __metadata: function() { return /* binding */ __metadata; },\n/* harmony export */   __param: function() { return /* binding */ __param; },\n/* harmony export */   __read: function() { return /* binding */ __read; },\n/* harmony export */   __rest: function() { return /* binding */ __rest; },\n/* harmony export */   __spread: function() { return /* binding */ __spread; },\n/* harmony export */   __spreadArray: function() { return /* binding */ __spreadArray; },\n/* harmony export */   __spreadArrays: function() { return /* binding */ __spreadArrays; },\n/* harmony export */   __values: function() { return /* binding */ __values; }\n/* harmony export */ });\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nfunction __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nfunction __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/tslib/tslib.es6.js\n"));

/***/ }),

/***/ "../../node_modules/@module-federation/utilities/src/utils/common.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@module-federation/utilities/src/utils/common.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getModule = exports.getContainer = exports.createRuntimeVariables = exports.injectScript = exports.loadScript = exports.createDelegatedModule = exports.extractUrlAndGlobal = exports.remoteVars = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.es6.js\");\nconst getRuntimeRemotes_1 = __webpack_require__(/*! ./getRuntimeRemotes */ \"../../node_modules/@module-federation/utilities/src/utils/getRuntimeRemotes.js\");\nlet remotesFromProcess = {};\ntry {\n    // @ts-ignore\n    remotesFromProcess = ({\"remote\":\"internal /Users/matejaristic/Code/the-micro-frontends-workshop/node_modules/@module-federation/nextjs-mf/src/default-delegate.js?remote=remote@http://localhost:3002/remoteEntry.js\"}) || 0;\n}\ncatch (e) {\n    // not in webpack bundle\n}\nexports.remoteVars = remotesFromProcess;\n// split the @ syntax into url and global\nconst extractUrlAndGlobal = (urlAndGlobal) => {\n    const index = urlAndGlobal.indexOf('@');\n    if (index <= 0 || index === urlAndGlobal.length - 1) {\n        throw new Error(`Invalid request \"${urlAndGlobal}\"`);\n    }\n    return [urlAndGlobal.substring(index + 1), urlAndGlobal.substring(0, index)];\n};\nexports.extractUrlAndGlobal = extractUrlAndGlobal;\nconst createDelegatedModule = (delegate, params) => {\n    const queries = [];\n    for (const [key, value] of Object.entries(params)) {\n        if (Array.isArray(value) || typeof value === 'object') {\n            throw new Error(`[Module Federation] Delegated module params cannot be an array or object. Key \"${key}\" should be a string or number`);\n        }\n        queries.push(`${key}=${value}`);\n    }\n    if (queries.length === 0)\n        return `internal ${delegate}`;\n    return `internal ${delegate}?${queries.join('&')}`;\n};\nexports.createDelegatedModule = createDelegatedModule;\nconst loadScript = (keyOrRuntimeRemoteItem) => {\n    const runtimeRemotes = (0, getRuntimeRemotes_1.getRuntimeRemotes)();\n    // 1) Load remote container if needed\n    let asyncContainer;\n    const reference = typeof keyOrRuntimeRemoteItem === 'string'\n        ? runtimeRemotes[keyOrRuntimeRemoteItem]\n        : keyOrRuntimeRemoteItem;\n    if (reference.asyncContainer) {\n        asyncContainer =\n            typeof reference.asyncContainer.then === 'function'\n                ? reference.asyncContainer\n                : // @ts-ignore\n                    reference.asyncContainer();\n    }\n    else {\n        // This casting is just to satisfy typescript,\n        // In reality remoteGlobal will always be a string;\n        const remoteGlobal = reference.global;\n        // Check if theres an override for container key if not use remote global\n        const containerKey = reference.uniqueKey\n            ? reference.uniqueKey\n            : remoteGlobal;\n        const __webpack_error__ = new Error();\n        // @ts-ignore\n        if (!globalThis.__remote_scope__) {\n            // create a global scope for container, similar to how remotes are set on window in the browser\n            // @ts-ignore\n            globalThis.__remote_scope__ = {\n                // @ts-ignore\n                _config: {},\n            };\n        }\n        // @ts-ignore\n        const globalScope = \n        // @ts-ignore\n        typeof window !== 'undefined' ? window : globalThis.__remote_scope__;\n        if (typeof window === 'undefined') {\n            globalScope['_config'][containerKey] = reference.url;\n        }\n        else {\n            // to match promise template system, can be removed once promise template is gone\n            if (!globalScope['remoteLoading']) {\n                globalScope['remoteLoading'] = {};\n            }\n            if (globalScope['remoteLoading'][containerKey]) {\n                return globalScope['remoteLoading'][containerKey];\n            }\n        }\n        // @ts-ignore\n        asyncContainer = new Promise(function (resolve, reject) {\n            function resolveRemoteGlobal() {\n                const asyncContainer = globalScope[remoteGlobal];\n                return resolve(asyncContainer);\n            }\n            if (typeof globalScope[remoteGlobal] !== 'undefined') {\n                return resolveRemoteGlobal();\n            }\n            __webpack_require__.l(reference.url, function (event) {\n                if (typeof globalScope[remoteGlobal] !== 'undefined') {\n                    return resolveRemoteGlobal();\n                }\n                const errorType = event && (event.type === 'load' ? 'missing' : event.type);\n                const realSrc = event && event.target && event.target.src;\n                __webpack_error__.message =\n                    'Loading script failed.\\n(' +\n                        errorType +\n                        ': ' +\n                        realSrc +\n                        ' or global var ' +\n                        remoteGlobal +\n                        ')';\n                __webpack_error__.name = 'ScriptExternalLoadError';\n                __webpack_error__.type = errorType;\n                __webpack_error__.request = realSrc;\n                reject(__webpack_error__);\n            }, containerKey);\n        }).catch(function (err) {\n            console.error('container is offline, returning fake remote');\n            console.error(err);\n            return {\n                fake: true,\n                // @ts-ignore\n                get: (arg) => {\n                    console.warn('faking', arg, 'module on, its offline');\n                    return Promise.resolve(() => {\n                        return {\n                            __esModule: true,\n                            default: () => {\n                                return null;\n                            },\n                        };\n                    });\n                },\n                //eslint-disable-next-line\n                init: () => { },\n            };\n        });\n        if (typeof window !== 'undefined') {\n            globalScope['remoteLoading'][containerKey] = asyncContainer;\n        }\n    }\n    return asyncContainer;\n};\nexports.loadScript = loadScript;\nconst createContainerSharingScope = (asyncContainer) => {\n    // @ts-ignore\n    return asyncContainer\n        .then(function (container) {\n        if (!__webpack_require__.S['default']) {\n            // not always a promise, so we wrap it in a resolve\n            return Promise.resolve(__webpack_require__.I('default')).then(function () {\n                return container;\n            });\n        }\n        else {\n            return container;\n        }\n    })\n        .then(function (container) {\n        try {\n            // WARNING: here might be a potential BUG.\n            //   `container.init` does not return a Promise, and here we do not call `then` on it.\n            // But according to [docs](https://webpack.js.org/concepts/module-federation/#dynamic-remote-containers)\n            //   it must be async.\n            // The problem may be in Proxy in NextFederationPlugin.js.\n            //   or maybe a bug in the webpack itself - instead of returning rejected promise it just throws an error.\n            // But now everything works properly and we keep this code as is.\n            container.init(__webpack_require__.S['default']);\n        }\n        catch (e) {\n            // maybe container already initialized so nothing to throw\n        }\n        return container;\n    });\n};\n/**\n * Return initialized remote container by remote's key or its runtime remote item data.\n *\n * `runtimeRemoteItem` might be\n *    { global, url } - values obtained from webpack remotes option `global@url`\n * or\n *    { asyncContainer } - async container is a promise that resolves to the remote container\n */\nconst injectScript = (keyOrRuntimeRemoteItem) => {\n    const asyncContainer = (0, exports.loadScript)(keyOrRuntimeRemoteItem);\n    return createContainerSharingScope(asyncContainer);\n};\nexports.injectScript = injectScript;\nconst createRuntimeVariables = (remotes) => {\n    if (!remotes) {\n        return {};\n    }\n    return Object.entries(remotes).reduce((acc, remote) => {\n        // handle promise new promise and external new promise\n        if (remote[1].startsWith('promise ') || remote[1].startsWith('external ')) {\n            const promiseCall = remote[1]\n                .replace('promise ', '')\n                .replace('external ', '');\n            acc[remote[0]] = `function() {\n        return ${promiseCall}\n      }`;\n            return acc;\n        }\n        // if somehow its just the @ syntax or something else, pass it through\n        acc[remote[0]] = JSON.stringify(remote[1]);\n        return acc;\n    }, {});\n};\nexports.createRuntimeVariables = createRuntimeVariables;\n/**\n * Returns initialized webpack RemoteContainer.\n * If its' script does not loaded - then load & init it firstly.\n */\nconst getContainer = (remoteContainer) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    if (!remoteContainer) {\n        throw Error(`Remote container options is empty`);\n    }\n    // @ts-ignore\n    const containerScope = \n    // @ts-ignore\n    typeof window !== 'undefined' ? window : globalThis.__remote_scope__;\n    if (typeof remoteContainer === 'string') {\n        if (containerScope[remoteContainer]) {\n            return containerScope[remoteContainer];\n        }\n        return;\n    }\n    else {\n        const uniqueKey = remoteContainer.uniqueKey;\n        if (containerScope[uniqueKey]) {\n            return containerScope[uniqueKey];\n        }\n        const container = yield (0, exports.injectScript)({\n            global: remoteContainer.global,\n            url: remoteContainer.url,\n        });\n        if (container) {\n            return container;\n        }\n        throw Error(`Remote container ${remoteContainer.url} is empty`);\n    }\n});\nexports.getContainer = getContainer;\n/**\n * Return remote module from container.\n * If you provide `exportName` it automatically return exact property value from module.\n *\n * @example\n *   remote.getModule('./pages/index', 'default')\n */\nconst getModule = ({ remoteContainer, modulePath, exportName, }) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    const container = yield (0, exports.getContainer)(remoteContainer);\n    try {\n        const modFactory = yield (container === null || container === void 0 ? void 0 : container.get(modulePath));\n        if (!modFactory)\n            return undefined;\n        const mod = modFactory();\n        if (exportName) {\n            return mod && typeof mod === 'object' ? mod[exportName] : undefined;\n        }\n        else {\n            return mod;\n        }\n    }\n    catch (error) {\n        console.error(error);\n        return undefined;\n    }\n});\nexports.getModule = getModule;\n//# sourceMappingURL=common.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@module-federation/utilities/src/utils/common.js\n"));

/***/ }),

/***/ "../../node_modules/@module-federation/utilities/src/utils/getRuntimeRemotes.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/@module-federation/utilities/src/utils/getRuntimeRemotes.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getRuntimeRemotes = void 0;\nconst common_1 = __webpack_require__(/*! ./common */ \"../../node_modules/@module-federation/utilities/src/utils/common.js\");\nconst getRuntimeRemotes = () => {\n    try {\n        const runtimeRemotes = Object.entries(common_1.remoteVars).reduce(function (acc, item) {\n            const [key, value] = item;\n            // if its an object with a thenable (eagerly executing function)\n            if (typeof value === 'object' && typeof value.then === 'function') {\n                acc[key] = { asyncContainer: value };\n            }\n            // if its a function that must be called (lazily executing function)\n            else if (typeof value === 'function') {\n                // @ts-ignore\n                acc[key] = { asyncContainer: value };\n            }\n            // if its a delegate module, skip it\n            else if (typeof value === 'string' && value.startsWith('internal ')) {\n                const [request, query] = value.replace('internal ', '').split('?');\n                if (query) {\n                    const remoteSyntax = new URLSearchParams(query).get('remote');\n                    if (remoteSyntax) {\n                        const [url, global] = (0, common_1.extractUrlAndGlobal)(remoteSyntax);\n                        acc[key] = { global, url };\n                    }\n                }\n            }\n            // if its just a string (global@url)\n            else if (typeof value === 'string') {\n                const [url, global] = (0, common_1.extractUrlAndGlobal)(value);\n                acc[key] = { global, url };\n            }\n            // we dont know or currently support this type\n            else {\n                //@ts-ignore\n                console.warn('remotes process', ({\"remote\":\"internal /Users/matejaristic/Code/the-micro-frontends-workshop/node_modules/@module-federation/nextjs-mf/src/default-delegate.js?remote=remote@http://localhost:3002/remoteEntry.js\"}));\n                throw new Error(`[mf] Invalid value received for runtime_remote \"${key}\"`);\n            }\n            return acc;\n        }, {});\n        return runtimeRemotes;\n    }\n    catch (err) {\n        console.warn('Unable to retrieve runtime remotes: ', err);\n    }\n    return {};\n};\nexports.getRuntimeRemotes = getRuntimeRemotes;\n//# sourceMappingURL=getRuntimeRemotes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0Btb2R1bGUtZmVkZXJhdGlvbi91dGlsaXRpZXMvc3JjL3V0aWxzL2dldFJ1bnRpbWVSZW1vdGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QixpQkFBaUIsbUJBQU8sQ0FBQyxxRkFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Qsa01BQW1CO0FBQ25FLG1GQUFtRixJQUFJO0FBQ3ZGO0FBQ0E7QUFDQSxTQUFTLElBQUk7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL2hvc3QvLi4vLi4vbm9kZV9tb2R1bGVzL0Btb2R1bGUtZmVkZXJhdGlvbi91dGlsaXRpZXMvc3JjL3V0aWxzL2dldFJ1bnRpbWVSZW1vdGVzLmpzPzdjOWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFJ1bnRpbWVSZW1vdGVzID0gdm9pZCAwO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi9jb21tb25cIik7XG5jb25zdCBnZXRSdW50aW1lUmVtb3RlcyA9ICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBydW50aW1lUmVtb3RlcyA9IE9iamVjdC5lbnRyaWVzKGNvbW1vbl8xLnJlbW90ZVZhcnMpLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBpdGVtKSB7XG4gICAgICAgICAgICBjb25zdCBba2V5LCB2YWx1ZV0gPSBpdGVtO1xuICAgICAgICAgICAgLy8gaWYgaXRzIGFuIG9iamVjdCB3aXRoIGEgdGhlbmFibGUgKGVhZ2VybHkgZXhlY3V0aW5nIGZ1bmN0aW9uKVxuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHZhbHVlLnRoZW4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBhY2Nba2V5XSA9IHsgYXN5bmNDb250YWluZXI6IHZhbHVlIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBpZiBpdHMgYSBmdW5jdGlvbiB0aGF0IG11c3QgYmUgY2FsbGVkIChsYXppbHkgZXhlY3V0aW5nIGZ1bmN0aW9uKVxuICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgIGFjY1trZXldID0geyBhc3luY0NvbnRhaW5lcjogdmFsdWUgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGlmIGl0cyBhIGRlbGVnYXRlIG1vZHVsZSwgc2tpcCBpdFxuICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5zdGFydHNXaXRoKCdpbnRlcm5hbCAnKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtyZXF1ZXN0LCBxdWVyeV0gPSB2YWx1ZS5yZXBsYWNlKCdpbnRlcm5hbCAnLCAnJykuc3BsaXQoJz8nKTtcbiAgICAgICAgICAgICAgICBpZiAocXVlcnkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVtb3RlU3ludGF4ID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhxdWVyeSkuZ2V0KCdyZW1vdGUnKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlbW90ZVN5bnRheCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgW3VybCwgZ2xvYmFsXSA9ICgwLCBjb21tb25fMS5leHRyYWN0VXJsQW5kR2xvYmFsKShyZW1vdGVTeW50YXgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYWNjW2tleV0gPSB7IGdsb2JhbCwgdXJsIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBpZiBpdHMganVzdCBhIHN0cmluZyAoZ2xvYmFsQHVybClcbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbdXJsLCBnbG9iYWxdID0gKDAsIGNvbW1vbl8xLmV4dHJhY3RVcmxBbmRHbG9iYWwpKHZhbHVlKTtcbiAgICAgICAgICAgICAgICBhY2Nba2V5XSA9IHsgZ2xvYmFsLCB1cmwgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIHdlIGRvbnQga25vdyBvciBjdXJyZW50bHkgc3VwcG9ydCB0aGlzIHR5cGVcbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybigncmVtb3RlcyBwcm9jZXNzJywgcHJvY2Vzcy5lbnYuUkVNT1RFUyk7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBbbWZdIEludmFsaWQgdmFsdWUgcmVjZWl2ZWQgZm9yIHJ1bnRpbWVfcmVtb3RlIFwiJHtrZXl9XCJgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgIH0sIHt9KTtcbiAgICAgICAgcmV0dXJuIHJ1bnRpbWVSZW1vdGVzO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUud2FybignVW5hYmxlIHRvIHJldHJpZXZlIHJ1bnRpbWUgcmVtb3RlczogJywgZXJyKTtcbiAgICB9XG4gICAgcmV0dXJuIHt9O1xufTtcbmV4cG9ydHMuZ2V0UnVudGltZVJlbW90ZXMgPSBnZXRSdW50aW1lUmVtb3Rlcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFJ1bnRpbWVSZW1vdGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@module-federation/utilities/src/utils/getRuntimeRemotes.js\n"));

/***/ }),

/***/ "../../node_modules/@module-federation/utilities/src/utils/importDelegatedModule.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@module-federation/utilities/src/utils/importDelegatedModule.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.importDelegatedModule = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.es6.js\");\nconst common_1 = __webpack_require__(/*! ./common */ \"../../node_modules/@module-federation/utilities/src/utils/common.js\");\nconst importDelegatedModule = (keyOrRuntimeRemoteItem) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    // @ts-ignore\n    return (0, common_1.loadScript)(keyOrRuntimeRemoteItem)\n        .then((asyncContainer) => {\n        return asyncContainer;\n    })\n        .then((asyncContainer) => {\n        // most of this is only needed because of legacy promise based implementation\n        // can remove proxies once we remove promise based implementations\n        if (typeof window === 'undefined') {\n            if (!Object.hasOwnProperty.call(keyOrRuntimeRemoteItem, 'global')) {\n                return asyncContainer;\n            }\n            // return asyncContainer;\n            //TODO: need to solve chunk flushing with delegated modules\n            return {\n                get: function (arg) {\n                    //@ts-ignore\n                    return asyncContainer.get(arg).then((f) => {\n                        const m = f();\n                        const result = {\n                            __esModule: m.__esModule,\n                        };\n                        for (const prop in m) {\n                            if (typeof m[prop] === 'function') {\n                                Object.defineProperty(result, prop, {\n                                    get: function () {\n                                        return function () {\n                                            //@ts-ignore\n                                            if (globalThis.usedChunks)\n                                                //@ts-ignore\n                                                globalThis.usedChunks.add(\n                                                //@ts-ignore\n                                                `${keyOrRuntimeRemoteItem.global}->${arg}`);\n                                            //eslint-disable-next-line prefer-rest-params\n                                            return m[prop](...arguments);\n                                        };\n                                    },\n                                    enumerable: true,\n                                });\n                            }\n                            else {\n                                Object.defineProperty(result, prop, {\n                                    get: () => {\n                                        //@ts-ignore\n                                        if (globalThis.usedChunks)\n                                            //@ts-ignore\n                                            globalThis.usedChunks.add(\n                                            //@ts-ignore\n                                            `${keyOrRuntimeRemoteItem.global}->${arg}`);\n                                        return m[prop];\n                                    },\n                                    enumerable: true,\n                                });\n                            }\n                        }\n                        if (m.then) {\n                            return Promise.resolve(() => result);\n                        }\n                        return () => result;\n                    });\n                },\n                init: asyncContainer.init,\n            };\n        }\n        else {\n            return asyncContainer;\n        }\n    });\n});\nexports.importDelegatedModule = importDelegatedModule;\n//# sourceMappingURL=importDelegatedModule.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0Btb2R1bGUtZmVkZXJhdGlvbi91dGlsaXRpZXMvc3JjL3V0aWxzL2ltcG9ydERlbGVnYXRlZE1vZHVsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkI7QUFDN0IsZ0JBQWdCLG1CQUFPLENBQUMsb0RBQU87QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMscUZBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsOEJBQThCLElBQUksSUFBSTtBQUN6RjtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLDhCQUE4QixJQUFJLElBQUk7QUFDckY7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQztBQUNELDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL2hvc3QvLi4vLi4vbm9kZV9tb2R1bGVzL0Btb2R1bGUtZmVkZXJhdGlvbi91dGlsaXRpZXMvc3JjL3V0aWxzL2ltcG9ydERlbGVnYXRlZE1vZHVsZS5qcz8yNTk0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbXBvcnREZWxlZ2F0ZWRNb2R1bGUgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY29tbW9uXzEgPSByZXF1aXJlKFwiLi9jb21tb25cIik7XG5jb25zdCBpbXBvcnREZWxlZ2F0ZWRNb2R1bGUgPSAoa2V5T3JSdW50aW1lUmVtb3RlSXRlbSkgPT4gdHNsaWJfMS5fX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgcmV0dXJuICgwLCBjb21tb25fMS5sb2FkU2NyaXB0KShrZXlPclJ1bnRpbWVSZW1vdGVJdGVtKVxuICAgICAgICAudGhlbigoYXN5bmNDb250YWluZXIpID0+IHtcbiAgICAgICAgcmV0dXJuIGFzeW5jQ29udGFpbmVyO1xuICAgIH0pXG4gICAgICAgIC50aGVuKChhc3luY0NvbnRhaW5lcikgPT4ge1xuICAgICAgICAvLyBtb3N0IG9mIHRoaXMgaXMgb25seSBuZWVkZWQgYmVjYXVzZSBvZiBsZWdhY3kgcHJvbWlzZSBiYXNlZCBpbXBsZW1lbnRhdGlvblxuICAgICAgICAvLyBjYW4gcmVtb3ZlIHByb3hpZXMgb25jZSB3ZSByZW1vdmUgcHJvbWlzZSBiYXNlZCBpbXBsZW1lbnRhdGlvbnNcbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBpZiAoIU9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKGtleU9yUnVudGltZVJlbW90ZUl0ZW0sICdnbG9iYWwnKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhc3luY0NvbnRhaW5lcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIHJldHVybiBhc3luY0NvbnRhaW5lcjtcbiAgICAgICAgICAgIC8vVE9ETzogbmVlZCB0byBzb2x2ZSBjaHVuayBmbHVzaGluZyB3aXRoIGRlbGVnYXRlZCBtb2R1bGVzXG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKGFyZykge1xuICAgICAgICAgICAgICAgICAgICAvL0B0cy1pZ25vcmVcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFzeW5jQ29udGFpbmVyLmdldChhcmcpLnRoZW4oKGYpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG0gPSBmKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX19lc01vZHVsZTogbS5fX2VzTW9kdWxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcHJvcCBpbiBtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtW3Byb3BdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXN1bHQsIHByb3AsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZ2xvYmFsVGhpcy51c2VkQ2h1bmtzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9AdHMtaWdub3JlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnbG9iYWxUaGlzLnVzZWRDaHVua3MuYWRkKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9AdHMtaWdub3JlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgJHtrZXlPclJ1bnRpbWVSZW1vdGVJdGVtLmdsb2JhbH0tPiR7YXJnfWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2VzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItcmVzdC1wYXJhbXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1bcHJvcF0oLi4uYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlc3VsdCwgcHJvcCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0OiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9AdHMtaWdub3JlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGdsb2JhbFRoaXMudXNlZENodW5rcylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9AdHMtaWdub3JlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdsb2JhbFRoaXMudXNlZENodW5rcy5hZGQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgJHtrZXlPclJ1bnRpbWVSZW1vdGVJdGVtLmdsb2JhbH0tPiR7YXJnfWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBtW3Byb3BdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtLnRoZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCgpID0+IHJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gcmVzdWx0O1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGluaXQ6IGFzeW5jQ29udGFpbmVyLmluaXQsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGFzeW5jQ29udGFpbmVyO1xuICAgICAgICB9XG4gICAgfSk7XG59KTtcbmV4cG9ydHMuaW1wb3J0RGVsZWdhdGVkTW9kdWxlID0gaW1wb3J0RGVsZWdhdGVkTW9kdWxlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1wb3J0RGVsZWdhdGVkTW9kdWxlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@module-federation/utilities/src/utils/importDelegatedModule.js\n"));

/***/ })

}]);